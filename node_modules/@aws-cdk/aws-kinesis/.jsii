{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-iam": "1.62.0",
    "@aws-cdk/aws-kms": "1.62.0",
    "@aws-cdk/aws-logs": "1.62.0",
    "@aws-cdk/core": "1.62.0",
    "constructs": "^3.0.4"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "CDK Constructs for AWS Kinesis",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.11.0 (build 1e9b8e1)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "kinesis"
  ],
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-kinesis",
  "readme": {
    "markdown": "## Amazon Kinesis Construct Library\n<!--BEGIN STABILITY BANNER-->\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n<!--END STABILITY BANNER-->\n\n[Amazon Kinesis](https://docs.aws.amazon.com/streams/latest/dev/introduction.html) provides collection and processing of large\n[streams](https://aws.amazon.com/streaming-data/) of data records in real time. Kinesis data streams can be used for rapid and continuous data\nintake and aggregation.\n\n## Table Of Contents\n\n- [Streams](#streams)\n  - [Encryption](#encryption)\n  - [Import](#import)\n  - [Permission Grants](#permission-grants)\n    - [Read Permissions](#read-permissions)\n    - [Write Permissions](#write-permissions)\n    - [Custom Permissions](#custom-permissions)\n\n## Streams\n\nAmazon Kinesis Data Streams ingests a large amount of data in real time, durably stores the data, and makes the data available for consumption.\n\nUsing the CDK, a new Kinesis stream can be created as part of the stack using the construct's constructor. You may specify the `streamName` to give\nyour own identifier to the stream. If not, CloudFormation will generate a name.\n\n```ts\nnew Stream(this, \"MyFirstStream\", {\n  streamName: \"my-awesome-stream\"\n});\n```\n\nYou can also specify properties such as `shardCount` to indicate how many shards the stream should choose and a `retentionPeriod`\nto specify how long the data in the shards should remain accessible.\nRead more at [Creating and Managing Streams](https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html)\n\n```ts\nnew Stream(this, \"MyFirstStream\", {\n  streamName: \"my-awesome-stream\",\n  shardCount: 3,\n  retentionPeriod: Duration.hours(48)\n});\n```\n\n### Encryption\n\n[Stream encryption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html) enables\nserver-side encryption using an AWS KMS key for a specified stream.\n\nEncryption is enabled by default on your stream with the master key owned by Kinesis Data Streams in regions where it is supported.\n\n```ts\nnew Stream(this, 'MyEncryptedStream');\n```\n\nYou can enable encryption on your stream with a user-managed key by specifying the `encryption` property.\nA KMS key will be created for you and associated with the stream.\n\n```ts\nnew Stream(this, \"MyEncryptedStream\", {\n  encryption: StreamEncryption.KMS\n});\n```\n\nYou can also supply your own external KMS key to use for stream encryption by specifying the `encryptionKey` property.\n\n```ts\nimport * as kms from \"@aws-cdk/aws-kms\";\n\nconst key = new kms.Key(this, \"MyKey\");\n\nnew Stream(this, \"MyEncryptedStream\", {\n  encryption: StreamEncryption.KMS,\n  encryptionKey: key\n});\n```\n\n### Import\n\nAny Kinesis stream that has been created outside the stack can be imported into your CDK app.\n\nStreams can be imported by their ARN via the `Stream.fromStreamArn()` API\n\n```ts\nconst stack = new Stack(app, \"MyStack\");\n\nconst importedStream = Stream.fromStreamArn(\n  stack,\n  \"ImportedStream\",\n  \"arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j\"\n);\n```\n\nEncrypted Streams can also be imported by their attributes via the `Stream.fromStreamAttributes()` API\n\n```ts\nimport { Key } from \"@aws-cdk/aws-kms\";\n\nconst stack = new Stack(app, \"MyStack\");\n\nconst importedStream = Stream.fromStreamAttributes(\n  stack,\n  \"ImportedEncryptedStream\",\n  {\n    streamArn: \"arn:aws:kinesis:us-east-2:123456789012:stream/f3j09j2230j\",\n    encryptionKey: kms.Key.fromKeyArn(\n      \"arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\"\n    )\n  }\n);\n```\n\n### Permission Grants\n\nIAM roles, users or groups which need to be able to work with Amazon Kinesis streams at runtime should be granted IAM permissions.\n\nAny object that implements the `IGrantable` interface (has an associated principal) can be granted permissions by calling:\n\n- `grantRead(principal)` - grants the principal read access\n- `grantWrite(principal)` - grants the principal write permissions to a Stream\n- `grantReadWrite(principal)` - grants principal read and write permissions\n\n#### Read Permissions\n\nGrant `read` access to a stream by calling the `grantRead()` API.\nIf the stream has an encryption key, read permissions will also be granted to the key.\n\n```ts\nconst lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n}\n\nconst stream = new Stream(this, 'MyEncryptedStream', {\n    encryption: StreamEncryption.KMS\n});\n\n// give lambda permissions to read stream\nstream.grantRead(lambdaRole);\n```\n\nThe following read permissions are provided to a service principal by the `grantRead()` API:\n\n- `kinesis:DescribeStreamSummary`\n- `kinesis:GetRecords`\n- `kinesis:GetShardIterator`\n- `kinesis:ListShards`\n- `kinesis:SubscribeToShard`\n\n#### Write Permissions\n\nGrant `write` permissions to a stream is provided by calling the `grantWrite()` API.\nIf the stream has an encryption key, write permissions will also be granted to the key.\n\n```ts\nconst lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n  description: 'Example role...',\n}\n\nconst stream = new Stream(this, 'MyEncryptedStream', {\n    encryption: StreamEncryption.KMS\n});\n\n// give lambda permissions to write to stream\nstream.grantWrite(lambdaRole);\n```\n\nThe following write permissions are provided to a service principal by the `grantWrite()` API:\n\n- `kinesis:ListShards`\n- `kinesis:PutRecord`\n- `kinesis:PutRecords`\n\n#### Custom Permissions\n\nYou can add any set of permissions to a stream by calling the `grant()` API.\n\n```ts\nconst user = new iam.User(stack, 'MyUser');\n\nconst stream = new Stream(stack, 'MyStream');\n\n// give my user permissions to list shards\nstream.grant(user, 'kinesis:ListShards');\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-kinesis",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Kinesis",
      "packageId": "Amazon.CDK.AWS.Kinesis",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "kinesis",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.kinesis"
    },
    "js": {
      "npm": "@aws-cdk/aws-kinesis"
    },
    "python": {
      "distName": "aws-cdk.aws-kinesis",
      "module": "aws_cdk.aws_kinesis"
    }
  },
  "types": {
    "@aws-cdk/aws-kinesis.CfnStream": {
      "assembly": "@aws-cdk/aws-kinesis",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Kinesis::Stream"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Kinesis::Stream`."
      },
      "fqn": "@aws-cdk/aws-kinesis.CfnStream",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Kinesis::Stream`."
        },
        "locationInModule": {
          "filename": "lib/kinesis.generated.ts",
          "line": 172
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-kinesis.CfnStreamProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/kinesis.generated.ts",
        "line": 108
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 191
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 205
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStream",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 112
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 133
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 196
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-tags",
            "stability": "external",
            "summary": "`AWS::Kinesis::Stream.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 163
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-shardcount",
            "stability": "external",
            "summary": "`AWS::Kinesis::Stream.ShardCount`."
          },
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 139
          },
          "name": "shardCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-name",
            "stability": "external",
            "summary": "`AWS::Kinesis::Stream.Name`."
          },
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 145
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-retentionperiodhours",
            "stability": "external",
            "summary": "`AWS::Kinesis::Stream.RetentionPeriodHours`."
          },
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 151
          },
          "name": "retentionPeriodHours",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-streamencryption",
            "stability": "external",
            "summary": "`AWS::Kinesis::Stream.StreamEncryption`."
          },
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 157
          },
          "name": "streamEncryption",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-kinesis.CfnStream.StreamEncryptionProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.CfnStream.StreamEncryptionProperty": {
      "assembly": "@aws-cdk/aws-kinesis",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-kinesis.CfnStream.StreamEncryptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/kinesis.generated.ts",
        "line": 215
      },
      "name": "StreamEncryptionProperty",
      "namespace": "CfnStream",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-encryptiontype",
            "stability": "external",
            "summary": "`CfnStream.StreamEncryptionProperty.EncryptionType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 220
          },
          "name": "encryptionType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-keyid",
            "stability": "external",
            "summary": "`CfnStream.StreamEncryptionProperty.KeyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 225
          },
          "name": "keyId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.CfnStreamConsumer": {
      "assembly": "@aws-cdk/aws-kinesis",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Kinesis::StreamConsumer"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Kinesis::StreamConsumer`."
      },
      "fqn": "@aws-cdk/aws-kinesis.CfnStreamConsumer",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Kinesis::StreamConsumer`."
        },
        "locationInModule": {
          "filename": "lib/kinesis.generated.ts",
          "line": 412
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-kinesis.CfnStreamConsumerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/kinesis.generated.ts",
        "line": 346
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 433
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 444
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStreamConsumer",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 350
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ConsumerARN"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 371
          },
          "name": "attrConsumerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ConsumerCreationTimestamp"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 376
          },
          "name": "attrConsumerCreationTimestamp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ConsumerName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 381
          },
          "name": "attrConsumerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ConsumerStatus"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 386
          },
          "name": "attrConsumerStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StreamARN"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 391
          },
          "name": "attrStreamArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 438
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-consumername",
            "stability": "external",
            "summary": "`AWS::Kinesis::StreamConsumer.ConsumerName`."
          },
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 397
          },
          "name": "consumerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-streamarn",
            "stability": "external",
            "summary": "`AWS::Kinesis::StreamConsumer.StreamARN`."
          },
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 403
          },
          "name": "streamArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.CfnStreamConsumerProps": {
      "assembly": "@aws-cdk/aws-kinesis",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::Kinesis::StreamConsumer`."
      },
      "fqn": "@aws-cdk/aws-kinesis.CfnStreamConsumerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/kinesis.generated.ts",
        "line": 281
      },
      "name": "CfnStreamConsumerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-consumername",
            "stability": "external",
            "summary": "`AWS::Kinesis::StreamConsumer.ConsumerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 287
          },
          "name": "consumerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-streamarn",
            "stability": "external",
            "summary": "`AWS::Kinesis::StreamConsumer.StreamARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 293
          },
          "name": "streamArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.CfnStreamProps": {
      "assembly": "@aws-cdk/aws-kinesis",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::Kinesis::Stream`."
      },
      "fqn": "@aws-cdk/aws-kinesis.CfnStreamProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/kinesis.generated.ts",
        "line": 17
      },
      "name": "CfnStreamProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-shardcount",
            "stability": "external",
            "summary": "`AWS::Kinesis::Stream.ShardCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 23
          },
          "name": "shardCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-name",
            "stability": "external",
            "summary": "`AWS::Kinesis::Stream.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 29
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-retentionperiodhours",
            "stability": "external",
            "summary": "`AWS::Kinesis::Stream.RetentionPeriodHours`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 35
          },
          "name": "retentionPeriodHours",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-streamencryption",
            "stability": "external",
            "summary": "`AWS::Kinesis::Stream.StreamEncryption`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 41
          },
          "name": "streamEncryption",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-kinesis.CfnStream.StreamEncryptionProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-tags",
            "stability": "external",
            "summary": "`AWS::Kinesis::Stream.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis.generated.ts",
            "line": 47
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.IStream": {
      "assembly": "@aws-cdk/aws-kinesis",
      "docs": {
        "stability": "stable",
        "summary": "A Kinesis Stream."
      },
      "fqn": "@aws-cdk/aws-kinesis.IStream",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stream.ts",
        "line": 23
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grant the indicated permissions on this stream to the provided IAM principal."
          },
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 73
          },
          "name": "grant",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If an encryption key is used, permission to ues the key to decrypt the\ncontents of the stream will also be granted.",
            "stability": "stable",
            "summary": "Grant read permissions for this stream and its contents to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 50
          },
          "name": "grantRead",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted.",
            "stability": "stable",
            "summary": "Grants read/write permissions for this stream and its contents to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 68
          },
          "name": "grantReadWrite",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If an encryption key is used, permission to ues the key to encrypt the\ncontents of the stream will also be granted.",
            "stability": "stable",
            "summary": "Grant write permissions for this stream and its contents to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 59
          },
          "name": "grantWrite",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "IStream",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 29
          },
          "name": "streamArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 36
          },
          "name": "streamName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Optional KMS encryption key associated with this stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 41
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.Stream": {
      "assembly": "@aws-cdk/aws-kinesis",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "remarks": "Can be encrypted with a KMS key.",
        "stability": "stable",
        "summary": "A Kinesis stream."
      },
      "fqn": "@aws-cdk/aws-kinesis.Stream",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/stream.ts",
          "line": 257
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-kinesis.StreamProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-kinesis.IStream"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stream.ts",
        "line": 221
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing Kinesis Stream provided an ARN."
          },
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 230
          },
          "name": "fromStreamArn",
          "parameters": [
            {
              "docs": {
                "summary": "The parent creating construct (usually `this`)."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's name."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Stream ARN (i.e. arn:aws:kinesis:<region>:<account-id>:stream/Foo)."
              },
              "name": "streamArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-kinesis.IStream"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a Stream construct that represents an external stream."
          },
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 241
          },
          "name": "fromStreamAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "The parent creating construct (usually `this`)."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's name."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Stream import properties."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-kinesis.StreamAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-kinesis.IStream"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant the indicated permissions on this stream to the given IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 162
          },
          "name": "grant",
          "overrides": "@aws-cdk/aws-kinesis.IStream",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "remarks": "If an encryption key is used, permission to ues the key to decrypt the\ncontents of the stream will also be granted.",
            "stability": "stable",
            "summary": "Grant write permissions for this stream and its contents to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 121
          },
          "name": "grantRead",
          "overrides": "@aws-cdk/aws-kinesis.IStream",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "If an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted.",
            "stability": "stable",
            "summary": "Grants read/write permissions for this stream and its contents to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 152
          },
          "name": "grantReadWrite",
          "overrides": "@aws-cdk/aws-kinesis.IStream",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "If an encryption key is used, permission to ues the key to decrypt the\ncontents of the stream will also be granted.",
            "stability": "stable",
            "summary": "Grant read permissions for this stream and its contents to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 138
          },
          "name": "grantWrite",
          "overrides": "@aws-cdk/aws-kinesis.IStream",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "Stream",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 251
          },
          "name": "streamArn",
          "overrides": "@aws-cdk/aws-kinesis.IStream",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 252
          },
          "name": "streamName",
          "overrides": "@aws-cdk/aws-kinesis.IStream",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Optional KMS encryption key associated with this stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 253
          },
          "name": "encryptionKey",
          "optional": true,
          "overrides": "@aws-cdk/aws-kinesis.IStream",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.StreamAttributes": {
      "assembly": "@aws-cdk/aws-kinesis",
      "datatype": true,
      "docs": {
        "remarks": "The easiest way to instantiate is to call\n`stream.export()`. Then, the consumer can use `Stream.import(this, ref)` and\nget a `Stream`.",
        "stability": "stable",
        "summary": "A reference to a stream."
      },
      "fqn": "@aws-cdk/aws-kinesis.StreamAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stream.ts",
        "line": 81
      },
      "name": "StreamAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 85
          },
          "name": "streamArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No encryption",
            "stability": "stable",
            "summary": "The KMS key securing the contents of the stream if encryption is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 92
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.StreamEncryption": {
      "assembly": "@aws-cdk/aws-kinesis",
      "docs": {
        "stability": "stable",
        "summary": "What kind of server-side encryption to apply to this stream."
      },
      "fqn": "@aws-cdk/aws-kinesis.StreamEncryption",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/stream.ts",
        "line": 358
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Records in the stream are not encrypted."
          },
          "name": "UNENCRYPTED"
        },
        {
          "docs": {
            "remarks": "If `encryptionKey` is specified, this key will be used, otherwise, one will be defined.",
            "stability": "stable",
            "summary": "Server-side encryption with a KMS key managed by the user."
          },
          "name": "KMS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Server-side encryption with a master key managed by Amazon Kinesis."
          },
          "name": "MANAGED"
        }
      ],
      "name": "StreamEncryption"
    },
    "@aws-cdk/aws-kinesis.StreamProps": {
      "assembly": "@aws-cdk/aws-kinesis",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Kinesis Stream."
      },
      "fqn": "@aws-cdk/aws-kinesis.StreamProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stream.ts",
        "line": 175
      },
      "name": "StreamProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- StreamEncryption.KMS if encrypted Streams are supported in the region\nor StreamEncryption.UNENCRYPTED otherwise.\nStreamEncryption.KMS if an encryption key is supplied through the encryptionKey property",
            "remarks": "If you choose KMS, you can specify a KMS key via `encryptionKey`. If\nencryption key is not specified, a key will automatically be created.",
            "stability": "stable",
            "summary": "The kind of server-side encryption to apply to this stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 204
          },
          "name": "encryption",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kinesis.StreamEncryption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Kinesis Data Streams master key ('/alias/aws/kinesis').\nIf encryption is set to StreamEncryption.KMS and this property is undefined, a new KMS key\nwill be created and associated with this stream.",
            "remarks": "The 'encryption' property must be set to \"Kms\".",
            "stability": "stable",
            "summary": "External KMS key to use for stream encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 215
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.hours(24)",
            "stability": "stable",
            "summary": "The number of hours for the data records that are stored in shards to remain accessible."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 186
          },
          "name": "retentionPeriod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "The number of shards for the stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 192
          },
          "name": "shardCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "<generated>",
            "stability": "stable",
            "summary": "Enforces a particular physical stream name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stream.ts",
            "line": 180
          },
          "name": "streamName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    }
  },
  "version": "1.62.0",
  "fingerprint": "sjn/HtBeAf1K7bag1Vu9CjfBF3vW35VFVI82g63dH0M="
}
