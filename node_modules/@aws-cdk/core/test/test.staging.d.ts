import { Test } from 'nodeunit';
declare const _default: {
    tearDown(cb: any): void;
    'base case'(test: Test): void;
    'staging can be disabled through context'(test: Test): void;
    'files are copied to the output directory during synth'(test: Test): void;
    'allow specifying extra data to include in the source hash'(test: Test): void;
    'with bundling'(test: Test): void;
    'bundler succeeds when staging is disabled'(test: Test): void;
    'bundler reuses its output when it can'(test: Test): void;
    'bundler considers its options when reusing bundle output'(test: Test): void;
    'bundler outputs to intermediate dir and renames to asset'(test: Test): void;
    'bundling failure preserves the bundleDir for diagnosability'(test: Test): void;
    'bundler re-uses assets from previous synths'(test: Test): void;
    'bundling throws when /asset-ouput is empty'(test: Test): void;
    'bundling with BUNDLE asset hash type'(test: Test): void;
    'custom hash'(test: Test): void;
    'throws with assetHash and not CUSTOM hash type'(test: Test): void;
    'throws with BUNDLE hash type and no bundling'(test: Test): void;
    'throws with CUSTOM and no hash'(test: Test): void;
    'throws when bundling fails'(test: Test): void;
    'with local bundling'(test: Test): void;
    'with local bundling returning false'(test: Test): void;
};
export = _default;
