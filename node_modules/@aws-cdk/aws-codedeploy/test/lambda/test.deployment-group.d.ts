import { Test } from 'nodeunit';
declare const _default: {
    'CodeDeploy Lambda DeploymentGroup': {
        'can be created with default AllAtOnce IN_PLACE configuration'(test: Test): void;
        'can be created with explicit name'(test: Test): void;
        'can be created with explicit role'(test: Test): void;
        'can configure blue/green traffic shifting'(test: Test): void;
        'can rollback on alarm'(test: Test): void;
        'onPreHook throws error if pre-hook already defined'(test: Test): void;
        'onPostHook throws error if post-hook already defined'(test: Test): void;
        'can run pre hook lambda function before deployment'(test: Test): void;
        'can add pre hook lambda function after creating the deployment group'(test: Test): void;
        'can run post hook lambda function before deployment'(test: Test): void;
        'can add post hook lambda function after creating the deployment group'(test: Test): void;
        'can disable rollback when alarm polling fails'(test: Test): void;
        'can disable rollback when deployment fails'(test: Test): void;
        'can enable rollback when deployment stops'(test: Test): void;
        'can disable rollback when alarm in failure state'(test: Test): void;
        'imported with fromLambdaDeploymentGroupAttributes': {
            'defaults the Deployment Config to Canary10Percent5Minutes'(test: Test): void;
        };
    };
};
export = _default;
