import { Test } from 'nodeunit';
declare const _default: {
    'version and aliases'(test: Test): void;
    'can create an alias to $LATEST'(test: Test): void;
    'can use newVersion to create a new Version'(test: Test): void;
    'can add additional versions to alias'(test: Test): void;
    'version and aliases with provisioned execution'(test: Test): void;
    'sanity checks on version weights'(test: Test): void;
    'metric adds Resource: aliasArn to dimensions'(test: Test): void;
    'sanity checks provisionedConcurrentExecutions'(test: Test): void;
    'alias exposes real Lambdas role'(test: Test): void;
    'functionName is derived from the aliasArn so that dependencies are sound'(test: Test): void;
    'with event invoke config'(test: Test): void;
    'throws when calling configureAsyncInvoke on already configured alias'(test: Test): void;
    'event invoke config on imported alias'(test: Test): void;
    'can enable AutoScaling on aliases'(test: Test): void;
    'can enable AutoScaling on aliases with Provisioned Concurrency set'(test: Test): void;
    'validation for utilizationTarget does not fail when using Tokens'(test: Test): void;
    'cannot enable AutoScaling twice on same property'(test: Test): void;
    'error when specifying invalid utilization value when AutoScaling on utilization'(test: Test): void;
    'can autoscale on a schedule'(test: Test): void;
};
export = _default;
